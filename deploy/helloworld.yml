---
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: colorapi
  labels:
    app: colorapi
spec:
  strategy:
    maxSurge: 10
    canary:
      canaryService: canary-colorapi
      stableService: colorapi
      trafficRouting:
        nginx:
           stableIngress: primary-ingress  # required
           annotationPrefix: argorollout.nginx.ingress.kubernetes.io # optional
           additionalIngressAnnotations: #optional
             canary-by-header: X-Canary
      steps:
      - setWeight: 25
      - pause:
          duration: "90s"
      - setWeight: 50
      - pause:
          duration: "90s"
  replicas: 10
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: colorapi
  template:
    metadata:
      labels:
        app: colorapi
    spec:
      containers:
      - name: colorapi
        image: parthagarwal026/argo:demo
        imagePullPolicy: Always
        ports:
        - name: web
          containerPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: colorapi
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: colorapi
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: canary-colorapi
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: colorapi
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: demo-concourse-flux
  name: primary-ingress
spec:
  rules:
  - host: colorapi.particule.io
    http:
      paths:
      - backend:
          serviceName: colorapi
          servicePort: 80